extends boxify/lib/views/base.jade

append body
    .container
        h1 Zugänge
        button.btn.btn-primary.pull-right(onClick=this.create) Erstellen
        table.table.table-striped
            thead
                tr
                    th Kontakt
                    th Gültigkeit
            tbody
                each pin in this.state.pins
                    tr(onClick=this.editPin(pin))
                        td= [pin._id.firstname||"",pin._id.lastname||""].join(" ")
                        td
                            button.btn.btn-xs.btn-default.pull-right(onClick=this.delete(pin))
                                i.glyphicon.glyphicon-trash
                            if !pin.rules.length
                                div Immer
                            each rule in pin.rules
                                div= this.renderRule(rule)

                                    
                                    
    if this.state.pin
        Modal
            .modal-header
                h2 Zugang erstellen
            .modal-body
                .form-horizontal
                    .form-group
                        label.col-xs-2.control-label Kontakt
                        .col-xs-10
                            ContactBox(value=this.state.pin._id&&this.state.pin._id._id onChange=this.onPersonChanged type="person")
                    Input(label="PIN" type="text" bsStyle=this.state.pin.pin.length < 4?"error":undefined value=this.state.pin.pin onChange=this.onPinChanged labelClassName="col-xs-2" wrapperClassName="col-xs-10")
                    
            .modal-footer
                button.btn.btn-default(onClick=this.cancel) Abbrechen
                button.btn.btn-primary(onClick=this.confirm) Erstellen
    if this.state.editPin
        Pin(pin=this.state.editPin onClose=this.closePin.bind(this))
    if this.state.delete
        Modal
            .modal-header
                h2 Zugang löschen
            .modal-body Möchten Sie den Zugang für
                b= " "+[this.state.delete._id.firstname||"",this.state.delete._id.lastname||""].join(" ")
                |  wirklich löschen?
            .modal-footer
                button.btn.btn-default(onClick=this.cancel) Abbrechen
                button.btn.btn-primary(onClick=this.confirm) Löschen
script.
    var client = require("../client.js");
    var Modal = require("boxify/lib/views/Modal.jade");
    var ContactBox = require("boxify/lib/views/ContactBox.jade");
    var moment = require("moment");
    var Pin = require("./pin.jade");
    var Input = require("react-bootstrap").Input;
    
    exports.componentDidMount = function(){
        if(!this.state.pins) this.loadData();
    }
    
    exports.loadData = function(){
        client.getPins(function(err,pins){
            this.state.pins = pins;
            this.update();
        }.bind(this));
    }  
    
    exports.create = function(){
        this.state.pin = {_id:null,pin:""};
        this.update();
    }
    
    exports.onPersonChanged = function(person){
        this.state.pin._id = {_id:person};
        this.update();
    }
    
    exports.onPinChanged = function(e){
        this.state.pin.pin = e.target.value;
        this.update();
    }
    
    exports.cancel = function(){
        delete this.state.pin;
        delete this.state.delete;
        this.update();
    }
    
    exports.delete = function(pin){
        return function(){
            this.state.delete = pin;
            this.update();
        }.bind(this)
    }

    exports.confirm = function(){
        if(this.state.pin){
            client.createPin(this.state.pin._id._id,this.state.pin.pin,function(){
                delete this.state.pin;
                this.loadData();
            }.bind(this))
        }else if(this.state.delete){
            client.deletePin(this.state.delete._id._id,function(){
                delete this.state.delete;
                this.loadData();
            }.bind(this))
        }
    }
    
    var days = ["Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"];
    var defaultTimeFrom = new Date(1970,0,1,0,0,0).getTime();
    var defaultTimeTo = new Date(1970,0,1,23,59,59,999).getTime();
    exports.renderRule = function(rule){
        var entries = [];
        
        if(rule.from&&rule.to){
            entries.push(moment(rule.from).format("LL")+" - "+moment(rule.to).format("LL"));
        }else if(rule.from){
            entries.push("ab "+moment(rule.from).format("LL"));
        }else if(rule.to){
            entries.push("bis "+moment(rule.to).format("LL"));
        }
        
        if(rule.timeFrom !== undefined || rule.timeTo!==undefined){
            entries.push(moment(rule.timeFrom!==undefined?rule.timeFrom:defaultTimeFrom).format("LT")+" - "+moment(rule.timeTo!==undefined?rule.timeTo:defaultTimeTo).format("LT"));
        }
        if(rule.days && rule.days.length < 7){
            for(var i = 0; rule.days && i < rule.days.length; i++){
                for(var j = 1; j < rule.days.length-i && rule.days[i+j] == rule.days[i]+j; j++);
                j--;
                if(j >= 1){
                    entries.push(days[rule.days[i]]+"-"+days[rule.days[i]+j]);
                    i += j;
                }else{
                    entries.push(days[rule.days[i]]);
                }
            }
        }
        
        if(!entries.length) entries.push("Immer");
        return entries.join(", ");
    }
    
    exports.editPin = function(pin){
        return function(e){
            if(e.target.tagName == "I" || e.target.tagName == "BUTTON") return;
            this.state.editPin = JSON.parse(JSON.stringify(pin));
            this.update();
        }.bind(this)
    }
    
    exports.closePin = function(){
        delete this.state.editPin;
        this.loadData();
    }
