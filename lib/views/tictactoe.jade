extends ../../../../lib/views/base.jade

append body
    style.
        #tictactoe{
            width:400px;
            height:400px;
            display:flex;
            align-items:stretch;
        }
        .tictactoe-row{
            flex:1;
            display:flex;
            align-items:stretch;
            flex-direction:column;
            border-right:1px solid black;
        }
        .tictactoe-row:last-child{
            border:none;
        }
        .tictactoe-cell{
            flex:1;
            border-bottom:1px solid black;
            text-align:center;
            line-height:133px;
            font-size:100px;
        }
        .tictactoe-cell:last-child{
            border:none;
        }
        .glyphicon-ok{
            color:green;
        }
        .glyphicon-remove{
            color:red;
        }
    .container
        if this.client.state == "connected"
            h2 Tic Tac Toe
            if !this.props.player
                h4 Select Player:
                .btn-group
                    .btn.btn-default(onClick=this.setPlayer(1))
                        i.glyphicon.glyphicon-ok
                    .btn.btn-default(onClick=this.setPlayer(2))
                        i.glyphicon.glyphicon-remove
            else
                #tictactoe
                    .tictactoe-row
                        +cell(0,0)
                        +cell(1,0)
                        +cell(2,0)
                    .tictactoe-row
                        +cell(0,1)
                        +cell(1,1)
                        +cell(2,1)
                    .tictactoe-row
                        +cell(0,2)
                        +cell(1,2)
                        +cell(2,2)
                if this.props.player == this.client.devices.tictactoe.state.player
                    h4 Your turn!
        else if this.client.state == "connecting"
            span Connecting...
        else
            span Disconnected!
mixin cell(x,y)
    div(onClick=this.turn(x,y) className="tictactoe-cell glyphicon "+(this.client.devices.tictactoe.state.field[x][y]?(this.client.devices.tictactoe.state.field[x][y]==1?"glyphicon-ok":"glyphicon-remove"):""))
script.
    var DeviceClient = require("../client/index.js");
    
    exports.getInitialState = function(){
        return {};
    }
    
    exports.componentWillMount = function(){
        this.client = new DeviceClient();
        this.client.on("change",function(){
            this.forceUpdate();
        }.bind(this))
    }
    
    exports.componentWillUnmount = function(){
        this.client.disconnect();
    }
    
    exports.setPlayer = function(id){
        return function(){
            this.props.player = id;
            this.forceUpdate();
        }.bind(this);
    }
    
    exports.turn = function(x,y){
        return function(){
            if(this.client.devices.tictactoe.state.player != this.props.player) return;
            this.client.devices.tictactoe.turn(this.props.player,x,y);
        }.bind(this);
    }
